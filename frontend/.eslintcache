[{"/home/bahar/Journal/journalsite/frontend/src/index.js":"1","/home/bahar/Journal/journalsite/frontend/src/reportWebVitals.js":"2","/home/bahar/Journal/journalsite/frontend/src/App.js":"3","/home/bahar/Journal/journalsite/frontend/src/components/LoginForm.js":"4","/home/bahar/Journal/journalsite/frontend/src/components/Nav.js":"5","/home/bahar/Journal/journalsite/frontend/src/components/SignUpForm.js":"6","/home/bahar/Journal/journalsite/frontend/src/components/Modal.js":"7","/home/bahar/Journal/journalsite/frontend/src/components/EntryForm.js":"8"},{"size":500,"mtime":1610724183031,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610724183031,"results":"11","hashOfConfig":"10"},{"size":4205,"mtime":1610814706178,"results":"12","hashOfConfig":"10"},{"size":1074,"mtime":1610753667597,"results":"13","hashOfConfig":"10"},{"size":614,"mtime":1610731113780,"results":"14","hashOfConfig":"10"},{"size":1080,"mtime":1610731683117,"results":"15","hashOfConfig":"10"},{"size":2122,"mtime":1610768099567,"results":"16","hashOfConfig":"10"},{"size":2622,"mtime":1610818038427,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"uhwlyn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/home/bahar/Journal/journalsite/frontend/src/index.js",[],["38","39"],"/home/bahar/Journal/journalsite/frontend/src/reportWebVitals.js",[],"/home/bahar/Journal/journalsite/frontend/src/App.js",["40"],"import React, { Component } from 'react';\nimport Nav from './components/Nav';\nimport EntryForm from './components/EntryForm';\nimport LoginForm from './components/LoginForm';\nimport SignupForm from './components/SignUpForm';\nimport './App.css';\nimport axios from \"axios\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayed_form: '',\n            logged_in: localStorage.getItem('token') ? true : false,\n            username: ''\n        };\n        if(this.state.logged_in){\n            console.log(localStorage.getItem('token'));\n        }\n    }\n\n    submitForm = (e) => {\n        if (this.state.logged_in) {\n            fetch('http://localhost:8000/journal/current_user/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                }\n            })\n            .then(res => res.json())\n            .then(user => {\n                console.log(user)\n                e['user'] = user.username;\n                fetch('http://localhost:8000/journal/',{\n                    headers: {\n                        Authorization: `JWT ${localStorage.getItem('token')}`,\n                        'Content-Type': 'application/json'\n                    },\n                    method: 'POST',\n                    body: JSON.stringify(e),\n                });\n                alert(\":D\");\n            });\n        }\n    }\n\n    componentDidMount() {\n        if (this.state.logged_in) {\n            fetch('http://localhost:8000/journal/current_user/', {\n            headers: {\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n            })\n            .then(res => res.json())\n            .then(json => {\n            this.setState({ username: json.username });\n            });\n        }\n    }\n    \n    handle_login = (e, data) => {\n        e.preventDefault();\n        fetch('http://localhost:8000/token-auth/', {\n            method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            })\n            .then(res => res.json())\n            .then(json => {\n            console.log( json );\n            localStorage.setItem('token', json.token);\n            this.setState({\n                logged_in: true,\n                displayed_form: '',\n                username: json.user.username\n            });\n        });\n    };\n\n    handle_logout = () => {\n        localStorage.removeItem('token');\n        this.setState({ logged_in: false, username: '' });\n    };\n    \n    handle_signup = (e, data) => {\n        e.preventDefault();\n        fetch('http://localhost:8000/journal/users/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n        .then(res => res.json())\n        .then(json => {\n            localStorage.setItem('token', json.token);\n            console.log(json.token);\n            this.setState({\n            logged_in: true,\n            displayed_form: '',\n            username: json.username\n            });\n        });\n    };\n\n    display_form = form => {\n        this.setState({\n            displayed_form: form\n        });\n    };\n\n    render() {\n        let form;\n        switch (this.state.displayed_form) {\n            case 'login':\n                form = <LoginForm handle_login={this.handle_login} />;\n                break;\n            case 'signup':\n                form = <SignupForm handle_signup={this.handle_signup} />;\n                break;\n            default:\n                form = <EntryForm />;\n        }\n\n        return (\n            <div className=\"App\">\n                <Nav\n                logged_in={this.state.logged_in}\n                display_form={this.display_form}\n                handle_logout={this.handle_logout}\n                />\n                <h3>\n                {this.state.logged_in\n                    ? `Hello, ${this.state.username}`\n                    : 'Please Log In'}\n                </h3>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default App;","/home/bahar/Journal/journalsite/frontend/src/components/LoginForm.js",[],"/home/bahar/Journal/journalsite/frontend/src/components/Nav.js",[],"/home/bahar/Journal/journalsite/frontend/src/components/SignUpForm.js",[],"/home/bahar/Journal/journalsite/frontend/src/components/Modal.js",[],["41","42"],"/home/bahar/Journal/journalsite/frontend/src/components/EntryForm.js",["43"],"import React, {useState, setState} from 'react';\n\nconst EntryForm = (props) => {\n\n    const entries = {\n        title: 'filler',\n        entry: 'test test test',\n        avgMood: -1,\n        sleep: -1,\n        exercise: -1,\n        downTime:-1,\n        healthyEating: -1,\n    }\n\n    const labels = {\n        title: 'Title',\n        entry: 'Entry',\n        avgMood: 'Average Mood',\n        sleep: 'Amount of Sleep',\n        exercise: 'Exercise',\n        downTime: 'Down Time',\n        healthyEating: 'Healthy Eating',\n    }\n\n    const [state, setState] = useState(entries)\n\n    const handle_change = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        state[name] = value;\n        console.log(state)\n        setState(state);\n    };\n    \n    const entryForm = () => {\n        const inputs = Object.keys(entries).map( (name, i) => {\n            const isNumber = !(labels[name] === 'Title' || labels[name] === 'Entry')\n            const input = (\n                <div key={i} className={name}>\n                <label htmlFor={name}>{labels[name]}</label>\n                <input\n                type= {isNumber ? \"number\" :\"text\"}\n                name={name}\n                onChange={e=> handle_change(e)}\n                /> \n                </div>\n            )\n            return input\n        \n        })\n        return inputs\n    };\n    \n    const handle_entry = (e) =>{\n        e.preventDefault();\n        /*\n        const form = e.target; \n        Object.keys(entries).map( (name, i) => {\n            //validate and stuff \n        });\n        const inputs;*/\n        submitForm(state);\n    }\n\n\n    const submitForm = (e) => {\n        if (props.logged_in) {\n            fetch('http://localhost:8000/journal/current_user/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                }\n            })\n            .then(res => res.json())\n            .then(user => {\n                console.log(user)\n                e['user'] = 2;\n                fetch('http://localhost:8000/journal/',{\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    method: 'POST',\n                    body: JSON.stringify(e),\n                });\n            });\n        } else {\n            alert(\"please sign in\");\n        }\n    }\n\n    const entryInputs = entryForm();\n\n    return (\n      <form>\n        <h4>Make a new entry</h4>\n        {entryInputs}\n        <button onClick={e => handle_entry(e)}> Submit</button> \n      </form>\n    );\n}\n\nexport default EntryForm;\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":7,"column":8,"nodeType":"50","messageId":"51","endLine":7,"endColumn":13},{"ruleId":"44","replacedBy":"52"},{"ruleId":"46","replacedBy":"53"},{"ruleId":"48","severity":1,"message":"54","line":1,"column":26,"nodeType":"50","messageId":"51","endLine":1,"endColumn":34},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["55"],["56"],"'setState' is defined but never used.","no-global-assign","no-unsafe-negation"]